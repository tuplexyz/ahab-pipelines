SAMPLES = ["A", "B"]

rule all:
    input:
        config["outdir"] + "plots/quals.svg"

rule bwa_map:
    input:
        config["inputdir"] + "genome.fa",
        config["inputdir"] + "samples/{sample}.fastq"
    output:
        config["outdir"] + "mapped_reads/{sample}.bam"
    shell:
        "bwa mem {input} | samtools view -Sb - > {output}"


rule samtools_sort:
    input:
        config["outdir"] + "mapped_reads/{sample}.bam"
    output:
        config["outdir"] + "sorted_reads/{sample}.bam"
    shell:
        "samtools sort -T sorted_reads/{wildcards.sample} "
        "-O bam {input} > {output}"


rule samtools_index:
    input:
        config["outdir"] + "sorted_reads/{sample}.bam"
    output:
        config["outdir"] + "sorted_reads/{sample}.bam.bai"
    shell:
        "samtools index {input}"


rule bcftools_call:
    input:
        fa=config["inputdir"] + "genome.fa",
        bam=expand(config["outdir"] + "sorted_reads/{sample}.bam", sample=SAMPLES),
        bai=expand(config["outdir"] + "sorted_reads/{sample}.bam.bai", sample=SAMPLES)
    output:
       config["outdir"] + "calls/all.vcf"
    shell:
        "bcftools mpileup -f {input.fa} {input.bam} | "
        "bcftools call -mv - > {output}"


rule plot_quals:
    input:
        config["outdir"] + "calls/all.vcf"
    output:
        config["outdir"] + "plots/quals.svg"
    script:
        "/pipeline/scripts/plot-quals.py"